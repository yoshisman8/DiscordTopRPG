@using Microsoft.AspNetCore.Identity
@using Discord.WebSocket
@using DiscordTopRPG.Data
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@inject DiscordSocketClient Client
@inject AuthenticationStateProvider AuthenticationStateProvider

@{
	var discordprovider = SignInManager.GetExternalAuthenticationSchemesAsync().GetAwaiter().GetResult().FirstOrDefault();
	string avatar = "";
	var User = AuthenticationStateProvider.GetAuthenticationStateAsync().GetAwaiter().GetResult().User;
	if (SignInManager.IsSignedIn(User))
	{
		var user = Client.GetUser(UserManager.GetUserAsync(User).GetAwaiter().GetResult().DiscordId);

		if (user != null)
		{
			avatar = user.GetAvatarUrl();
		}
	}

}

<AuthorizeView>
	<Authorized>
		<ul class="navbar-nav">
			<li>
				<a asp-action="Index" asp-controller="Sheet"><img height="40" width="40" class="nav-item border-dark img-thumbnail rounded-circle" src="@avatar" /></a>
			</li>

			<li class="nav-item">
				<a asp-action="Index" asp-controller="Sheet" class="nav-link">Hello @User.Identity.Name!</a>
			</li>

			<li>
				<form class="form-inline" asp-action="Logout" asp-controller="Identity">
					<button type="submit" class="nav-item btn btn-burple">Logout</button>
				</form>
			</li>
		</ul>
	</Authorized>

	<NotAuthorized>
		<ul class="navbar-nav">
			<li>
				<form method="post" action="api/login">
					<button class="btn btn-burple" name="provider" value="@discordprovider.Name" type="submit" title="Log in using Discord">Log In</button>
				</form>
			</li>
		</ul>
	</NotAuthorized>
</AuthorizeView>

@code{

	[CascadingParameter] Task<AuthenticationState> AuthenticationStateTask { get; set; }
	
	public 
}